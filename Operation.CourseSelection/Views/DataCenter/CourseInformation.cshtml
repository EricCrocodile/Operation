
@{
    ViewBag.Title = "課程資訊";
}

<h2>課程資訊</h2>

<div id="CourseData">
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="input-group mb-1">
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="inputGroupSelect01">課號</label>
                    </div>
                    <input type="text" class="form-control" v-model="ID" placeholder="課號" aria-label="Username" aria-describedby="basic-addon1" v-bind:disabled="IDInputDisable">
                </div>
            </div>
            <div class="col-md-4">
                <div class="input-group mb-1">
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="inputGroupSelect01">課名</label>
                    </div>
                    <input type="text" class="form-control" v-model="Name" placeholder="課名" aria-label="Username" aria-describedby="basic-addon1">
                </div>
            </div>
            <div class="col-md-2">
                <div class="input-group mb-1">
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="inputGroupSelect01">學分數</label>
                    </div>
                    <input type="number" class="form-control" v-model="Units" min="0" step="1" placeholder="學分數" aria-label="Username" aria-describedby="basic-addon1">
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="input-group mb-1">
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="inputGroupSelect01">上課地點</label>
                    </div>
                    <input type="text" class="form-control" v-model="Locations" placeholder="上課地點" aria-label="Username" aria-describedby="basic-addon1">
                </div>
            </div>
            <div class="col-md-4">
                <div class="input-group mb-1">
                    <div class="input-group-prepend">
                        <label class="input-group-text" for="inputGroupSelect01">講師名字</label>
                    </div>
                    <input type="text" class="form-control" v-model="Teacher" placeholder="講師名字" aria-label="Username" aria-describedby="basic-addon1">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-6 col-md-4">
                <button v-on:click="DoButtonEvent" type="button" class="btn btn-info">{{ButtonStatus}}</button>
            </div>
        </div>
    </div>

    <hr />

    <table class="table">
        <thead class="thead-dark">
            <tr>
                <th scope="col">課號</th>
                <th scope="col">課名</th>
                <th scope="col">學分數</th>
                <th scope="col">上課地點</th>
                <th scope="col">講師名字</th>
                <th scope="col">功能</th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="course in CourseList" :key="course.id">
                <td>{{course.ID}}</td>
                <td>{{course.Name}}</td>
                <td>{{course.Units}}</td>
                <td>{{course.Locations}}</td>
                <td>{{course.Teacher}}</td>
                <td>
                    <button v-on:click="ModifyBtnClick(course)" type="button" class="btn btn-success" :value="course.ID">修改</button>
                    <button v-on:click="DeleteBtnClick(course)" type="button" class="btn btn-danger" :value="course.ID">刪除</button>
                </td>
            </tr>
        </tbody>
    </table>
</div>

@section scripts{
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>

    <script>
        var CourseFuntion = new Vue({
            el: '#CourseData',
            data: {
                CourseList: [],

                ID: 'C002',
                Name: '體育課',
                Units: 2,
                Locations: '籃球場',
                Teacher: '體育老師',

                IsIncreasing: true,
                ButtonStatus: '新增',
                IDInputDisable: false,
            },
            watch: {
                IsIncreasing: function() {
                    if (CourseFuntion.IsIncreasing) {
                        CourseFuntion.IDInputDisable = false;
                        CourseFuntion.ButtonStatus = '新增';
                    }
                    else {
                        CourseFuntion.IDInputDisable = true;
                        CourseFuntion.ButtonStatus = '修改';
                    }
                },
            },
            methods: {
                GetCourseList: function () {
                     $.ajax({
                    url: "@Url.Content("~/DataCenter/GetCourseList")",
                    type: "get",
                    dataType: "json",
                    timeout: 10000,
                    success: function (respons) {
                        console.table(respons);
                        CourseFuntion.CourseList = respons;
                        }
                    })
                },
                DoButtonEvent: function () {
                    if (CourseFuntion.IsIncreasing) {
                        $.ajax({
                            url: "@Url.Content("~/DataCenter/AddCourse")",
                            type: "post",
                            data: {
                                ID: CourseFuntion.ID,
                                Name: CourseFuntion.Name,
                                Units: CourseFuntion.Units,
                                Locations: CourseFuntion.Locations,
                                Teacher: CourseFuntion.Teacher,
                            },
                            dataType: "json",
                            timeout: 10000,
                            success: function (respons) {
                                if (respons.SysCode == 200) {
                                    alert("新增成功!");
                                    CourseFuntion.ClearFormData();
                                    CourseFuntion.GetCourseList();
                                    return;
                                }
                                else {
                                    alert("新增失敗 : " + respons.SysMsg);
                                    return;
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                console.log(textStatus);
                                console.log(errorThrown);
                                alert("[例外狀況]新增失敗 : " + XMLHttpRequest.responseText);
                            }
                        })
                    } else if (CourseFuntion.IsIncreasing === false) {
                        $.ajax({
                            url: "@Url.Content("~/DataCenter/ModifyCourse")",
                            type: "post",
                            data: {
                                ID: CourseFuntion.ID,
                                Name: CourseFuntion.Name,
                                Units: CourseFuntion.Units,
                                Locations: CourseFuntion.Locations,
                                Teacher: CourseFuntion.Teacher,
                            },
                            dataType: "json",
                            timeout: 10000,
                            success: function (respons) {
                                if (respons.SysCode == 200) {
                                    alert("課號 - " + CourseFuntion.ID + " 修改成功!");
                                    CourseFuntion.ClearFormData();
                                    CourseFuntion.GetCourseList();
                                    return;
                                }
                                else {
                                    alert("修改失敗 : " + respons.SysMsg);
                                    return;
                                }
                            },
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                console.log(textStatus);
                                console.log(errorThrown);
                                alert("[例外狀況]修改失敗 : " + XMLHttpRequest.responseText);
                            }
                        })
                    }
                },
                ClearFormData: function () {
                    CourseFuntion.ID = "";
                    CourseFuntion.Name = "";
                    CourseFuntion.Units = "";
                    CourseFuntion.Locations = "";
                    CourseFuntion.Teacher = "";

                    CourseFuntion.IsIncreasing = true;
                },
                ModifyBtnClick: function (Cour) {
                    CourseFuntion.ID = Cour.ID;
                    CourseFuntion.Name = Cour.Name;
                    CourseFuntion.Units = Cour.Units;
                    CourseFuntion.Locations = Cour.Locations;
                    CourseFuntion.Teacher = Cour.Teacher;

                    CourseFuntion.IsIncreasing = false;
                },
                DeleteBtnClick: function (Cour) {
                    console.log(Cour);
                }
            },
            created: function () {
                this.GetCourseList();
            },
        })
    </script>
}

